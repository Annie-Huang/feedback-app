React Front To Back 2022
https://www.udemy.com/course/react-front-to-back-2022/learn/lecture/29767686#content

https://github.com/bradtraversy/feedback-app
https://github.com/bradtraversy/github-finder-app
https://github.com/bradtraversy/house-marketplace
https://gist.github.com/bradtraversy

https://reactjs.org/docs/create-a-new-react-app.html
https://reactrouter.com/docs/en/v6/api
https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch

This project is Part 1
Part 2 is at: C:\react\github-finder
Part 3 is at C:\react\react-sandbox
Part 4 is at C:\react\house-marketplace

========================================================================
PS C:\react> npx create-react-app feedback-app --use-npm
PS C:\react\feedback-app> npm i react-icons
PS C:\react\feedback-app> npm i uuid
PS C:\react\feedback-app> npm i framer-motion@4.1.17
PS C:\react\feedback-app> npm i react-router-dom

http://localhost:3000/
http://localhost:3000/about
http://localhost:3000/post/1/abc

PS C:\react\feedback-app> npm run build
In postman:
http://localhost:5000/feedback

PS C:\react\feedback-app> npm run dev

---------------

Incorrect:      <div class='container'>
Correct:        <div className='container'>

Incorrect:       <label for=''></label>
Correct:         <label htmlFor=''></label>

---------------

JSX:
  return (
    <div className='container'>
      <h1>My App</h1>
    </div>
  );
is the same as:
Javascript:
  return React.createElement(
    'div',
    { className: 'container' },
    React.createElement('h1', {}, 'My App')
  );

---------------

If you want to access to the previous value:
    setRating(10);
to
    setRating((prev) => {
      console.log(prev);
      return prev + 1;
    });

---------------

This is strange:
Card.propTypes = {
  children: PropTypes.node.isRequired,
  reverse: PropTypes.bool,          <<< why not boolean. But I generally use typescript rather than proptypes
};

  item: PropTypes.object.isRequired,

  feedback: PropTypes.arrayOf(
    PropTypes.shape({
      id: PropTypes.number.isRequired,
      text: PropTypes.string.isRequired,
      rating: PropTypes.number.isRequired,
    })
  ),


---------------
Router:
Browser Router uses the HTML5 history API to keep our user interface in sync with URL.
(e.g http://localhost:3000/about)

Hash router uses the hash portion of the URL to keep it in sync
(e.g http://localhost:3000/#about)

Use <Link> instead of <a> so the page will not be refreshed when we land on the page.

      <Link to='about'>
        <FaQuestion size={30} />
      </Link>

      <Link to={{ pathname: '/about', search: '?sort=name' }}>
        <FaQuestion size={30} />
      </Link>
      Will go to http://localhost:3000/about?sort=name

      <Link to={{ pathname: '/about', search: '?sort=name', hash: '#hello' }}>
        <FaQuestion size={30} />
      </Link>
      Will go to http://localhost:3000/about?sort=name#hello

---------------
<NavLink> syntax:

          <NavLink to='/' activeClassName='active'>
            Home
          </NavLink>

---------------
Get param value from router:

      http://localhost:3000/post/200
      <Route path='/post/:id/:name' element={<Post />} />
      const params = useParams();
      return <div>POST {params.id}</div>;

      http://localhost:3000/post/2000/brad
      <Route path='/post/:id/:name' element={<Post />} />
      const params = useParams();
      <h1>POST {params.id}</h1>
      <p>Name: {params.name}</p>

---------------
<Navigate> is like <Redirect> in react-router-dom v5.

Navigation when state change:
  if (status === 404) {
    return <Navigate to='/notfound' />;
  }

Navigation on button click:
  const navigate = useNavigate();
  const onClick = () => {
    console.log('Hello');
    navigate('/about');
  };


---------------
Only show specific component if the router contains certain path  <<< this can also be done with a if conditional check, right?
      <Routes>
        <Route path='/show' element={<h1>Hello World</h1>} />
      </Routes>

---------------
Http status codes:

1xx: Informational. Request received / processing
2xx: Success. Successfully received
3xx: Redirect. Further action must be taken / redirect
4xx: Client Error. Request does not have what it needs.
5xx: Server Error. Server failed to fulfill a valid request.


---------------
!!!! How to set proxy in react app:
  "proxy": "http://localhost:5000",

---------------
Fetch api calls:
    const response = await fetch('/feedback', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(newFeedback),
    });

    const data = await response.json();

   ------------

      await fetch(`/feedback/${id}`, {
        method: 'DELETE',
      });

   ------------

    const response = await fetch(`/feedback/${id}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(updItem),
    });

    const data = await response.json();

---------------
---------------
---------------
---------------
