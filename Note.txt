React Front To Back 2022
https://www.udemy.com/course/react-front-to-back-2022/learn/lecture/29767686#content

https://github.com/bradtraversy/feedback-app
https://github.com/bradtraversy/github-finder-app
https://github.com/bradtraversy/house-marketplace
https://gist.github.com/bradtraversy

https://reactjs.org/docs/create-a-new-react-app.html

========================================================================
PS C:\react> npx create-react-app feedback-app --use-npm
PS C:\react\feedback-app> npm i react-icons
PS C:\react\feedback-app> npm i uuid
PS C:\react\feedback-app> npm i framer-motion@4.1.17
PS C:\react\feedback-app> npm i react-router-dom

http://localhost:3000/
http://localhost:3000/about

---------------

Incorrect:      <div class='container'>
Correct:        <div className='container'>

Incorrect:       <label for=''></label>
Correct:         <label htmlFor=''></label>

---------------

JSX:
  return (
    <div className='container'>
      <h1>My App</h1>
    </div>
  );
is the same as:
Javascript:
  return React.createElement(
    'div',
    { className: 'container' },
    React.createElement('h1', {}, 'My App')
  );

---------------

If you want to access to the previous value:
    setRating(10);
to
    setRating((prev) => {
      console.log(prev);
      return prev + 1;
    });

---------------

This is strange:
Card.propTypes = {
  children: PropTypes.node.isRequired,
  reverse: PropTypes.bool,          <<< why not boolean. But I generally use typescript rather than proptypes
};

  item: PropTypes.object.isRequired,

  feedback: PropTypes.arrayOf(
    PropTypes.shape({
      id: PropTypes.number.isRequired,
      text: PropTypes.string.isRequired,
      rating: PropTypes.number.isRequired,
    })
  ),


---------------
Router:
Browser Router uses the HTML5 history API to keep our user interface in sync with URL.
(e.g http://localhost:3000/about)

Hash router uses the hash portion of the URL to keep it in sync
(e.g http://localhost:3000/#about)

Use <Link> instead of <a> so the page will not be refreshed when we land on the page.

---------------
---------------
---------------
---------------
